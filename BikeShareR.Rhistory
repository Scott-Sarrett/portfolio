library(tidyverse)  #helps wrangle data
library(lubridate)  #helps wrangle date attributes
library(ggplot2)  #helps visualize data
setwd("C:/Users/scott/Documents/BikeShare/CSV") #Sets working directory
getwd() #Check to make sure working directory is correct
#Upload data sets (CSV files)
Jul_2022 <- read.csv("202207-divvy-tripdata.csv")
Aug_2022 <- read.csv("202208-divvy-tripdata.csv")
Sep_2022 <- read.csv("202209-divvy-publictripdata.csv")
Oct_2022 <- read.csv("202210-divvy-tripdata.csv")
Nov_2022 <- read.csv("202211-divvy-tripdata.csv")
Dec_2022 <- read.csv("202212-divvy-tripdata.csv")
Jan_2023 <- read.csv("202301-divvy-tripdata.csv")
Feb_2023 <- read.csv("202302-divvy-tripdata.csv")
Mar_2023 <- read.csv("202303-divvy-tripdata.csv")
Apr_2023 <- read.csv("202304-divvy-tripdata.csv")
May_2023 <- read.csv("202305-divvy-tripdata.csv")
Jun_2023 <- read.csv("202301-divvy-tripdata.csv")
#Combine data into one data frame
fullyear1 <- bind_rows(Jul_2022, Aug_2022, Sep_2022, Oct_2022, Nov_2022, Dec_2022, Jan_2023, Feb_2023, Mar_2023, Apr_2023, May_2023, Jun_2023)
#Remove columns that are not relevant to this case
fullyear2 <- subset(fullyear1, select = -c(5, 6, 7, 8, 9, 10, 11, 12))
#Find the time of each ride (in seconds) that we will call ride_length
fullyear2$ride_length <- difftime(fullyear2$ended_at, fullyear2$started_at)
#Create new columns date, month, day, year and weekday
fullyear2$date <- as.Date(fullyear2$started_at)
fullyear2$month <- format(as.Date(fullyear2$date), "%m")
fullyear2$day <- format(as.Date(fullyear2$date), "%d")
fullyear2$year <- format(as.Date(fullyear2$date), "%y")
fullyear2$weekday <- format(as.Date(fullyear2$date), "%A")
#Remove bad data with rows that have a negative ride length
fullyear3 <- fullyear2[!(fullyear2$ride_length<0),]
#Convert class for ride length to be able to perform calculations
fullyear3$ride_length <- type.convert(fullyear3$ride_length, as.is = TRUE)
#Compare how casual and member riders differ by weekday and ride length
aggregate(fullyear3$ride_length ~ fullyear3$member_casual + fullyear3$weekday, FUN = mean)
#Weekdays were listed out of order so we fix that issue
fullyear3$weekday <- ordered(fullyear3$weekday, levels = c("Sunday" , "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"))
#Check code again to insure it is properly ordered
aggregate(fullyear3$ride_length ~ fullyear3$member_casual + fullyear3$weekday, FUN = mean)
#Compare the total number of rides between casual and members for each day
fullyear3 %>%
group_by(member_casual, weekday) %>%
summarise(numberofrides = n())
#Compare how casual and member riders differ between bike choice
fullyear3 %>%
group_by(member_casual, rideable_type) %>%
summarise(numberofrides = n())
#Create visual to compare total rides per day between customers
fullyear3 %>%
group_by(member_casual, weekday) %>%
summarise(number_of_rides = n()) %>%
arrange(member_casual, weekday) %>%
ggplot(aes(x = weekday, y = number_of_rides, fill = member_casual,)) +
geom_col(position = "dodge") +
labs(title = "Cyclistic Bike-Share Rides from July 2022 - June 2023", subtitle = "Total Number of Rides Grouped by Customer Type and Weekday", x = "Weekday", y = "Number of Rides", fill = "Customer Type")
#Create visual to compare average ride length per day between customers
fullyear3 %>%
group_by(member_casual, weekday) %>%
summarise(average_duration = mean(ride_length)) %>%
arrange(member_casual, weekday) %>%
ggplot(aes(x = weekday, y = average_duration, fill = member_casual,)) +
geom_col(position = "dodge") +
labs(title = "Cyclistic Bike-Share Rides from July 2022 - June 2023", subtitle = "Average Time of Rides Grouped by Customer Type and Weekday", x = "Weekday", y = "Average Duration(in seconds)", fill = "Customer Type")
#Create visual to compare bike choice between customers
fullyear3 %>%
group_by(member_casual, rideable_type) %>%
summarise(number_of_rides = n()) %>%
arrange(member_casual, rideable_type) %>%
ggplot(aes(x = rideable_type, y = number_of_rides, fill = member_casual,)) +
geom_col(position = "dodge") +
labs(title = "Cyclistic Bike-Share Rides from July 2022 - June 2023", subtitle = "Number of Rides Grouped by Bike and Customer Type", x = "Bike Type", y = "Number of Rides", fill = "Customer Type")
savehistory("C:/Users/scott/Documents/BikeShare/CSV/BikeShareR.Rhistory")
